import org.jetbrains.kotlin.gradle.dsl.KotlinVersion
import org.jetbrains.kotlin.gradle.tasks.KotlinCompilationTask

plugins {
    id "java"
    id "org.jetbrains.intellij" version "1.17.0"
    id "org.jetbrains.kotlin.jvm" version "1.8.20"
}

group "org.jetbrains"
version "1.13"

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation "junit:junit:4.13.2"
}

intellij {
    version = "2023.3.2"

    if (Boolean.valueOf(aceJumpFromMarketplace)) {
        plugins.add("AceJump:3.8.18")
    } else {
        plugins.add(project(":AceJump"))
    }
    if (Boolean.valueOf(ideaVimFromMarketplace)) {
        plugins.add("IdeaVIM:2.8.1")
    } else {
        plugins.add(project(":IdeaVIM"))
    }

    updateSinceUntilBuild = false
    buildSearchableOptions.enabled = false

    publishPlugin {
        token = publishToken
    }
}

compileKotlin.kotlinOptions {
    jvmTarget = "17"
}
compileTestKotlin.kotlinOptions {
    jvmTarget = "17"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

kotlin {
    jvmToolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// Switching to K2 because AceJump plugin also switched to it
// https://github.com/acejump/AceJump/commit/c52f046a6ff8162e8b18541dff5fc9bda715c269
tasks
        .withType(KotlinCompilationTask.class)
        .configureEach {
            compilerOptions.languageVersion = KotlinVersion.KOTLIN_2_0
        }

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

tasks {
    wrapper {
        gradleVersion = gradleVersion
    }

    test {
        setScanForTestClasses(false)
        // Only run tests from classes that end with "Test"
        include("**/*Test.class")
        include("**/*test.class")
        include("**/*Tests.class")
        exclude("**/ParserTest.class")
    }
}
